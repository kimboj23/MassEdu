/**
 * Content Graph: Defines relationships between lessons, stories, and modules
 * This powers the bidirectional learning architecture
 */

export const contentGraph = {
  // Concept-centric view
  concepts: {
    vat: {
      id: 'vat',
      name: 'Thu·∫ø VAT (Gi√° tr·ªã gia tƒÉng)',
      shortName: 'VAT',
      definition: 'Thu·∫ø gi√°n thu 10% ·∫©n trong gi√° h·∫ßu h·∫øt h√†ng h√≥a, d·ªãch v·ª•',
      lessons: ['01-ban-dang-dong-thue-gi'],
      stories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          timestamp: 'canh-2a',
          context: 'Sinh vi√™n mua b√°nh m√¨ v√† ph√°t hi·ªán thu·∫ø VAT',
        },
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          timestamp: 'canh-2b',
          context: 'Sinh vi√™n th·∫•y VAT tr√™n h√≥a ƒë∆°n c√† ph√™',
        },
      ],
      modules: ['module-e-tax-fairness'],
    },

    'indirect-tax': {
      id: 'indirect-tax',
      name: 'Thu·∫ø gi√°n thu',
      definition: 'Thu·∫ø ƒë√°nh v√†o h√†ng h√≥a/d·ªãch v·ª•, m·ªçi ng∆∞·ªùi ƒë√≥ng nh∆∞ nhau',
      lessons: ['01-ban-dang-dong-thue-gi', '04-nguyen-tac-thu-thue'],
      stories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          timestamp: 'canh-3-1',
          context: 'So s√°nh ng∆∞·ªùi gi√†u ngh√®o c√πng mua b√°nh m√¨',
        },
      ],
      modules: ['module-e-tax-fairness'],
    },

    'direct-tax': {
      id: 'direct-tax',
      name: 'Thu·∫ø tr·ª±c ti·∫øp',
      definition: 'Thu·∫ø ƒë√°nh v√†o thu nh·∫≠p/t√†i s·∫£n, ai ki·∫øm nhi·ªÅu ƒë√≥ng nhi·ªÅu',
      lessons: ['01-ban-dang-dong-thue-gi', '04-nguyen-tac-thu-thue'],
      stories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          timestamp: 'module-c',
          context: 'T√¨m hi·ªÉu v·ªÅ thu·∫ø l≈©y ti·∫øn',
        },
      ],
      modules: ['module-c-progressive-tax'],
    },

    'tax-id': {
      id: 'tax-id',
      name: 'M√£ s·ªë thu·∫ø / S·ªë ƒë·ªãnh danh',
      definition: 'T·ª´ 1/7/2025, s·ªë CCCD 12 s·ªë ch√≠nh l√† m√£ s·ªë thu·∫ø',
      lessons: ['01-ban-dang-dong-thue-gi'],
      stories: [
        {
          character: 'sinh-vien',
          scene: '02-G·∫∑p-kh√≥',
          timestamp: 'canh-4',
          context: 'Kh√°ch h√†ng y√™u c·∫ßu m√£ s·ªë thu·∫ø',
        },
      ],
      modules: ['module-b-tax-id'],
    },

    'progressive-tax': {
      id: 'progressive-tax',
      name: 'Thu·∫ø l≈©y ti·∫øn',
      definition: 'H·ªá th·ªëng thu·∫ø t√≠nh theo b·∫≠c, b·∫≠c cao h∆°n ƒë√≥ng t·ª∑ l·ªá cao h∆°n',
      lessons: ['04-nguyen-tac-thu-thue'],
      stories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          timestamp: 'module-c',
          context: 'Gi·∫£i th√≠ch thu·∫ø l≈©y ti·∫øn v·ªõi v√≠ d·ª• l∆∞∆°ng 20 tri·ªáu',
        },
      ],
      modules: ['module-c-progressive-tax'],
    },

    'social-contract': {
      id: 'social-contract',
      name: 'Kh·∫ø ∆∞·ªõc x√£ h·ªôi',
      definition: 'Ng∆∞·ªùi d√¢n ƒë√≥ng thu·∫ø ƒë·ªÉ ƒë·ªïi l·∫°i d·ªãch v·ª• c√¥ng v√† an ninh',
      lessons: ['02-tai-sao-dong-thue'],
      stories: [
        {
          character: 'sinh-vien',
          scene: '03-ket-thuc',
          timestamp: 'canh-7-2',
          context: 'Suy ng·∫´m v·ªÅ m·ªëi li√™n h·ªá gi·ªØa thu·∫ø v√† d·ªãch v·ª• c√¥ng',
        },
      ],
      modules: [],
    },

    transparency: {
      id: 'transparency',
      name: 'Minh b·∫°ch thu·∫ø',
      definition: 'C√¥ng khai th√¥ng tin v·ªÅ thu thu·∫ø v√† chi ti√™u ng√¢n s√°ch',
      lessons: ['05-thue-va-minh-bach'],
      stories: [],
      modules: [],
    },

    fairness: {
      id: 'fairness',
      name: 'C√¥ng b·∫±ng thu·∫ø',
      definition: 'Ph√¢n b·ªï g√°nh n·∫∑ng thu·∫ø theo kh·∫£ nƒÉng chi tr·∫£',
      lessons: ['04-nguyen-tac-thu-thue'],
      stories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          timestamp: 'canh-3-1',
          context: 'C√¢u h·ªèi v·ªÅ c√¥ng b·∫±ng trong thu·∫ø VAT',
        },
      ],
      modules: ['module-e-tax-fairness'],
    },
  },

  // Lesson-centric view
  lessons: {
    '01-ban-dang-dong-thue-gi': {
      id: '01-ban-dang-dong-thue-gi',
      title: 'B·∫°n ƒëang ƒë√≥ng thu·∫ø g√¨?',
      path: '/course-tax/lessons/01-ban-dang-dong-thue-gi',
      concepts: ['vat', 'indirect-tax', 'direct-tax', 'tax-id'],
      relatedStories: [
        {
          character: 'sinh-vien',
          scenes: ['01-thuc-tinh'],
          priority: 'high',
          description: 'Xem sinh vi√™n kh√°m ph√° thu·∫ø VAT trong cu·ªôc s·ªëng h√†ng ng√†y',
        },
      ],
      relatedModules: ['module-b-tax-id'],
      learningOutcomes: [
        'Nh·∫≠n di·ªán c√°c lo·∫°i thu·∫ø ƒëang ƒë√≥ng h√†ng ng√†y',
        'Ph√¢n bi·ªát thu·∫ø tr·ª±c ti·∫øp v√† gi√°n thu',
        'Hi·ªÉu v·ªÅ m√£ s·ªë thu·∫ø c√° nh√¢n',
      ],
    },

    '02-tai-sao-dong-thue': {
      id: '02-tai-sao-dong-thue',
      title: 'T·∫°i sao b·∫°n ƒë√≥ng thu·∫ø?',
      path: '/course-tax/lessons/02-tai-sao-dong-thue',
      concepts: ['social-contract'],
      relatedStories: [
        {
          character: 'sinh-vien',
          scenes: ['01-thuc-tinh', '03-ket-thuc'],
          priority: 'high',
          description: 'Theo d√µi sinh vi√™n nh·∫≠n ra √Ω nghƒ©a c·ªßa thu·∫ø',
        },
      ],
      relatedModules: [],
      learningOutcomes: [
        'Hi·ªÉu kh√°i ni·ªám kh·∫ø ∆∞·ªõc x√£ h·ªôi',
        'Nh·∫≠n ra m·ªëi li√™n h·ªá gi·ªØa thu·∫ø v√† d·ªãch v·ª• c√¥ng',
      ],
    },

    '03-tien-thue-di-dau': {
      id: '03-tien-thue-di-dau',
      title: 'Ti·ªÅn thu·∫ø ƒëi ƒë√¢u?',
      path: '/course-tax/lessons/03-tien-thue-di-dau',
      concepts: [],
      relatedStories: [
        {
          character: 'sinh-vien',
          scenes: ['03-ket-thuc'],
          priority: 'high',
          description: 'Ch∆°i minigame ph√¢n b·ªï ng√¢n s√°ch',
        },
      ],
      relatedModules: [],
      learningOutcomes: [
        'Hi·ªÉu c√°ch ph√¢n b·ªï ng√¢n s√°ch nh√† n∆∞·ªõc',
        'Nh·∫≠n ra c√°c trade-off trong chi ti√™u c√¥ng',
      ],
    },

    '04-nguyen-tac-thu-thue': {
      id: '04-nguyen-tac-thu-thue',
      title: 'Thu·∫ø ƒë∆∞·ª£c thu nh∆∞ n√†o?',
      path: '/course-tax/lessons/04-nguyen-tac-thu-thue',
      concepts: ['progressive-tax', 'fairness', 'indirect-tax', 'direct-tax'],
      relatedStories: [
        {
          character: 'sinh-vien',
          scenes: ['01-thuc-tinh'],
          priority: 'high',
          description: 'Kh√°m ph√° c√¥ng b·∫±ng thu·∫ø qua so s√°nh ng∆∞·ªùi gi√†u ngh√®o',
        },
      ],
      relatedModules: ['module-c-progressive-tax', 'module-e-tax-fairness'],
      learningOutcomes: [
        'Hi·ªÉu c√°c nguy√™n t·∫Øc thu thu·∫ø c√¥ng b·∫±ng',
        'Ph√¢n bi·ªát thu·∫ø l≈©y ti·∫øn v√† t·ª∑ l·ªá',
      ],
    },

    '05-thue-va-minh-bach': {
      id: '05-thue-va-minh-bach',
      title: 'Thu·∫ø v√† minh b·∫°ch',
      path: '/course-tax/lessons/05-thue-va-minh-bach',
      concepts: ['transparency'],
      relatedStories: [],
      relatedModules: [],
      learningOutcomes: [
        'Hi·ªÉu t·∫ßm quan tr·ªçng c·ªßa minh b·∫°ch thu·∫ø',
        'Bi·∫øt c√°ch ƒë√≤i h·ªèi tr√°ch nhi·ªám gi·∫£i tr√¨nh',
      ],
    },

    '06-thue-va-chinh-tri': {
      id: '06-thue-va-chinh-tri',
      title: 'Thu·∫ø v√† ch√≠nh tr·ªã',
      path: '/course-tax/lessons/06-thue-va-chinh-tri',
      concepts: [],
      relatedStories: [],
      relatedModules: ['module-e-tax-fairness'],
      learningOutcomes: [
        'Hi·ªÉu m·ªëi li√™n h·ªá gi·ªØa thu·∫ø v√† quy·ªÅn l·ª±c ch√≠nh tr·ªã',
        'So s√°nh c√°c h·ªá th·ªëng thu·∫ø qu·ªëc t·∫ø',
      ],
    },
  },

  // Story-centric view
  stories: {
    'sinh-vien': {
      id: 'sinh-vien',
      character: 'Sinh vi√™n',
      title: 'H√†nh tr√¨nh th·ª©c t·ªânh',
      description: 'Theo d√µi sinh vi√™n kh√°m ph√° thu·∫ø qua cu·ªôc s·ªëng h√†ng ng√†y',
      path: '/course-tax/characters/sinh-vien',
      avatar: 'üéì',
      scenes: [
        {
          id: '01-thuc-tinh',
          title: 'Ph·∫ßn 1: Th·ª©c t·ªânh',
          path: '/course-tax/characters/sinh-vien/01-thuc-tinh',
          relatedLessons: ['01-ban-dang-dong-thue-gi', '02-tai-sao-dong-thue', '04-nguyen-tac-thu-thue'],
          concepts: ['vat', 'indirect-tax', 'fairness'],
          hooks: [
            {
              timestamp: 'canh-2a',
              concept: 'vat',
              type: 'learn-more',
              lesson: '01-ban-dang-dong-thue-gi',
              text: 'T√¨m hi·ªÉu th√™m v·ªÅ thu·∫ø VAT',
            },
            {
              timestamp: 'canh-3-1',
              concept: 'fairness',
              type: 'deep-dive',
              module: 'module-e-tax-fairness',
              text: 'T·∫°i sao thu·∫ø gi√°n thu kh√¥ng c√¥ng b·∫±ng?',
            },
            {
              timestamp: 'module-c',
              concept: 'progressive-tax',
              type: 'module',
              module: 'module-c-progressive-tax',
              text: 'Thu·∫ø l≈©y ti·∫øn ho·∫°t ƒë·ªông nh∆∞ th·∫ø n√†o?',
            },
          ],
        },
        {
          id: '02-G·∫∑p-kh√≥',
          title: 'Ph·∫ßn 2: G·∫∑p-kh√≥',
          path: '/course-tax/characters/sinh-vien/02-G·∫∑p-kh√≥',
          relatedLessons: ['01-ban-dang-dong-thue-gi'],
          concepts: ['tax-id'],
          hooks: [
            {
              timestamp: 'canh-4',
              concept: 'tax-id',
              type: 'module',
              module: 'module-b-tax-id',
              text: 'M√£ s·ªë thu·∫ø l√† g√¨? Khi n√†o c·∫ßn ƒëƒÉng k√Ω?',
            },
            {
              timestamp: 'module-d',
              concept: 'freelance-tax',
              type: 'module',
              module: 'module-d-freelance-vs-employee',
              text: 'Freelance v√† nh√¢n vi√™n kh√°c nhau th·∫ø n√†o v·ªÅ thu·∫ø?',
            },
          ],
        },
        {
          id: '03-ket-thuc',
          title: 'Ph·∫ßn 3: Suy-nghi·ªám',
          path: '/course-tax/characters/sinh-vien/03-ket-thuc',
          relatedLessons: ['02-tai-sao-dong-thue', '03-tien-thue-di-dau'],
          concepts: ['social-contract'],
          hooks: [
            {
              timestamp: 'canh-7-2',
              concept: 'social-contract',
              type: 'learn-more',
              lesson: '02-tai-sao-dong-thue',
              text: 'Kh·∫ø ∆∞·ªõc x√£ h·ªôi l√† g√¨?',
            },
            {
              timestamp: 'canh-7-3',
              concept: 'budget',
              type: 'interactive',
              lesson: '03-tien-thue-di-dau',
              text: 'Ch∆°i minigame ph√¢n b·ªï ng√¢n s√°ch',
            },
          ],
        },
      ],
    },
  },

  // Module-centric view
  modules: {
    'module-a-recognizing-daily-taxes': {
      id: 'module-a-recognizing-daily-taxes',
      title: 'Module A: Nh·∫≠n di·ªán thu·∫ø trong cu·ªôc s·ªëng',
      path: '/course-tax/modules/module-a-recognizing-daily-taxes',
      concepts: ['vat', 'indirect-tax', 'direct-tax'],
      prerequisiteLessons: [],
      relatedStories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          context: 'Kh√°m ph√° thu·∫ø VAT trong cu·ªôc s·ªëng h√†ng ng√†y',
        },
      ],
    },

    'module-b-tax-id': {
      id: 'module-b-tax-id',
      title: 'M√£ s·ªë thu·∫ø & Khi n√†o c·∫ßn lo v·ªÅ thu·∫ø',
      path: '/course-tax/modules/module-b-tax-id',
      concepts: ['tax-id'],
      prerequisiteLessons: ['01-ban-dang-dong-thue-gi'],
      relatedStories: [
        {
          character: 'sinh-vien',
          scene: '02-G·∫∑p-kh√≥',
          context: 'Kh√°ch h√†ng y√™u c·∫ßu m√£ s·ªë thu·∫ø',
        },
      ],
    },

    'module-c-progressive-tax': {
      id: 'module-c-progressive-tax',
      title: 'Thu·∫ø l≈©y ti·∫øn',
      path: '/course-tax/modules/module-c-progressive-tax',
      concepts: ['progressive-tax'],
      prerequisiteLessons: ['01-ban-dang-dong-thue-gi', '04-nguyen-tac-thu-thue'],
      relatedStories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          context: 'Gi·∫£i th√≠ch thu·∫ø l≈©y ti·∫øn',
        },
      ],
    },

    'module-d-freelance-vs-employee': {
      id: 'module-d-freelance-vs-employee',
      title: 'Freelance vs Nh√¢n vi√™n',
      path: '/course-tax/modules/module-d-freelance-vs-employee',
      concepts: ['tax-id', 'direct-tax'],
      prerequisiteLessons: ['01-ban-dang-dong-thue-gi'],
      relatedStories: [
        {
          character: 'sinh-vien',
          scene: '02-G·∫∑p-kh√≥',
          context: 'So s√°nh thu·∫ø cho freelancer v√† nh√¢n vi√™n',
        },
      ],
    },

    'module-e-tax-fairness': {
      id: 'module-e-tax-fairness',
      title: 'C√¥ng b·∫±ng thu·∫ø - So s√°nh s√¢u h∆°n',
      path: '/course-tax/modules/module-e-tax-fairness',
      concepts: ['fairness', 'progressive-tax', 'indirect-tax'],
      prerequisiteLessons: ['04-nguyen-tac-thu-thue'],
      relatedStories: [
        {
          character: 'sinh-vien',
          scene: '01-thuc-tinh',
          context: 'C√¢u h·ªèi v·ªÅ c√¥ng b·∫±ng',
        },
      ],
    },
  },
};

/**
 * Helper functions to query the content graph
 */

// Get all content related to a concept
export function getConceptContent(conceptId) {
  return contentGraph.concepts[conceptId] || null;
}

// Get lesson by ID
export function getLesson(lessonId) {
  return contentGraph.lessons[lessonId] || null;
}

// Get story by character ID
export function getStory(characterId) {
  return contentGraph.stories[characterId] || null;
}

// Get module by ID
export function getModule(moduleId) {
  return contentGraph.modules[moduleId] || null;
}

// Get all stories related to a lesson
export function getStoriesForLesson(lessonId) {
  const lesson = getLesson(lessonId);
  return lesson ? lesson.relatedStories : [];
}

// Get all lessons related to a story scene
export function getLessonsForScene(characterId, sceneId) {
  const story = getStory(characterId);
  if (!story) return [];

  const scene = story.scenes.find(s => s.id === sceneId);
  return scene ? scene.relatedLessons : [];
}

// Get hooks for a specific scene
export function getHooksForScene(characterId, sceneId) {
  const story = getStory(characterId);
  if (!story) return [];

  const scene = story.scenes.find(s => s.id === sceneId);
  return scene ? scene.hooks : [];
}

// Get all content (lessons + stories + modules) related to a concept
export function getAllContentForConcept(conceptId) {
  const concept = getConceptContent(conceptId);
  if (!concept) return { lessons: [], stories: [], modules: [] };

  return {
    lessons: concept.lessons.map(id => getLesson(id)).filter(Boolean),
    stories: concept.stories,
    modules: concept.modules.map(id => getModule(id)).filter(Boolean),
  };
}

export default contentGraph;
