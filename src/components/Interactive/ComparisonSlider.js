import React, { useState } from 'react';
import NumberSlider from './NumberSlider';
import { ThoughtBubble, ThoughtBubbleSequence, RevealBubble } from './index';
import styles from './interactive.module.css';

function formatCurrency(value) {
  return new Intl.NumberFormat('vi-VN').format(Math.round(value));
}

function formatPercentage(value) {
  return `${(value * 100).toFixed(3)}%`;
}

export default function ComparisonSlider({
  label1,
  income1,
  label2,
  income2,
  initialPurchaseAmount = 25000,
}) {
  const [purchaseAmount, setPurchaseAmount] = useState(initialPurchaseAmount);
  const [vatRate, setVatRate] = useState(10);

  const taxAmount = purchaseAmount / (1 + 100 / vatRate);
  const percentage1 = taxAmount / income1;
  const percentage2 = taxAmount / income2;
  const differenceFactor = percentage2 > 0 ? percentage1 / percentage2 : 0;

  const handleSliderChange = (newValue) => {
    setPurchaseAmount(newValue);
  };

  const handleVatChange = (e) => {
    setVatRate(Number(e.target.value));
  };

  return (
    <div className={styles.comparisonSlider}>
      <div className={styles.comparisonColumn}>
        <h5>{label1}</h5>
        <NumberSlider
          value={purchaseAmount}
          onValueChange={handleSliderChange}
          min={10000}
          max={100000}
          step={1000}
          unit="ƒë·ªìng"
        />
        <div className={styles.comparisonStats}>
          <p>Thu·∫ø VAT ({vatRate}%): <strong>{formatCurrency(taxAmount)} ƒë·ªìng</strong></p>
          <p>T·ª∑ l·ªá tr√™n thu nh·∫≠p th√°ng: <strong>{formatPercentage(percentage1)}</strong></p>
        </div>
      </div>

      <div className={styles.comparisonDivider}>vs</div>

      <div className={styles.comparisonColumn}>
        <h5>{label2}</h5>
        <NumberSlider
          value={purchaseAmount}
          onValueChange={handleSliderChange}
          min={10000}
          max={100000}
          step={1000}
          unit="ƒë·ªìng"
        />
        <div className={styles.comparisonStats}>
          <p>Thu·∫ø VAT ({vatRate}%): <strong>{formatCurrency(taxAmount)} ƒë·ªìng</strong></p>
          <p>T·ª∑ l·ªá tr√™n thu nh·∫≠p th√°ng: <strong>{formatPercentage(percentage2)}</strong></p>
        </div>
      </div>

      <div className={styles.comparisonInsight}>
        <div className={styles.vatRateSliderContainer}>
          <label htmlFor="vatRate">ƒêi·ªÅu ch·ªânh thu·∫ø su·∫•t VAT: <strong>{vatRate}%</strong></label>
          <input
            type="range"
            id="vatRate"
            min="0"
            max="25"
            step="1"
            value={vatRate}
            onChange={handleVatChange}
            className={styles.vatRateSlider}
          />
        </div>
        <RevealBubble buttonText="üí° Xem c√¥ng th·ª©c t√≠nh">
          <p>Thu·∫ø VAT ƒë∆∞·ª£c t√≠nh t·ª´ gi√° ƒë√£ bao g·ªìm thu·∫ø (gi√° b·∫°n tr·∫£):</p>
          <code className={styles.formulaCode}>
            Thu·∫ø VAT = Gi√° b√°n / (1 + 100 / T·ª∑ l·ªá VAT)
          </code>
          <p>V√≠ d·ª•: <strong>{formatCurrency(taxAmount)}</strong> = {formatCurrency(purchaseAmount)} / (1 + 100 / {vatRate})</p>
        </RevealBubble>
        <ThoughtBubble icon="üìä" variant="warning">
          <strong>C√πng s·ªë ti·ªÅn thu·∫ø. Nh∆∞ng:</strong>
          <p style={{margin: '0.5rem 0 0 0'}}>
            ‚Üí Ng∆∞·ªùi c√≥ thu nh·∫≠p th·∫•p ch·ªãu g√°nh n·∫∑ng thu·∫ø <strong>n·∫∑ng g·∫•p {differenceFactor.toFixed(1)} l·∫ßn</strong> (theo t·ª∑ l·ªá thu nh·∫≠p)!
          </p>
        </ThoughtBubble>

        <ThoughtBubble icon="‚öñÔ∏è" variant="question">
          <strong>ƒê√¢y g·ªçi l√† thu·∫ø gi√°n thu (regressive tax)</strong> - m·ªçi ng∆∞·ªùi ƒë√≥ng nh∆∞ nhau, nh∆∞ng ·∫£nh h∆∞·ªüng kh√¥ng c√¥ng b·∫±ng.
          <p style={{margin: '0.5rem 0 0 0'}}>
            V·∫≠y c√≥ c√°ch n√†o c√¥ng b·∫±ng h∆°n kh√¥ng? C√≥ - ƒë√≥ l√† **thu·∫ø tr·ª±c ti·∫øp** (nh∆∞ thu·∫ø thu nh·∫≠p c√° nh√¢n), n∆°i ng∆∞·ªùi c√≥ thu nh·∫≠p cao h∆°n s·∫Ω ƒë√≥ng thu·∫ø v·ªõi t·ª∑ l·ªá cao h∆°n.
          </p>
        </ThoughtBubble>
      </div>
    </div>
  );
}